#ifndef PTL_BLOCKS_H
#define PTL_BLOCKS_H

/*
 * blocks.h
 *
 * Argument block types for the Portals 3.0 library
 * Generated by idl
 *
 */

#include <portals/types.h>

/* put LIB_MAX_DISPATCH last here  -- these must match the
   assignements to the dispatch table in lib-p30/dispatch.c */
#define PTL_GETID     1
#define PTL_NISTATUS  2
#define PTL_NIDIST    3
#define PTL_NIDEBUG   4
#define PTL_MEATTACH  5
#define PTL_MEINSERT  6
// #define PTL_MEPREPEND 7
#define PTL_MEUNLINK  8
#define PTL_TBLDUMP   9 
#define PTL_MEDUMP   10
#define PTL_MDATTACH 11
// #define PTL_MDINSERT 12
#define PTL_MDBIND   13
#define PTL_MDUPDATE 14
#define PTL_MDUNLINK 15
#define PTL_EQALLOC  16
#define PTL_EQFREE   17
#define PTL_ACENTRY  18
#define PTL_PUT      19 
#define PTL_GET      20
#define PTL_FAILNID  21
#define LIB_MAX_DISPATCH 21

typedef struct PtlFailNid_in {
	ptl_handle_ni_t interface;
	ptl_nid_t       nid;
	unsigned int    threshold;
} PtlFailNid_in;

typedef struct PtlFailNid_out {
	int             rc;
} PtlFailNid_out;

typedef struct PtlGetId_in {
        ptl_handle_ni_t handle_in;
} PtlGetId_in;

typedef struct PtlGetId_out {
        int rc;
        ptl_process_id_t id_out;
} PtlGetId_out;

typedef struct PtlNIStatus_in {
        ptl_handle_ni_t interface_in;
        ptl_sr_index_t register_in;
} PtlNIStatus_in;

typedef struct PtlNIStatus_out {
        int rc;
        ptl_sr_value_t status_out;
} PtlNIStatus_out;


typedef struct PtlNIDist_in {
        ptl_handle_ni_t interface_in;
        ptl_process_id_t process_in;
} PtlNIDist_in;

typedef struct PtlNIDist_out {
        int rc;
        unsigned long distance_out;
} PtlNIDist_out;


typedef struct PtlNIDebug_in {
        unsigned int mask_in;
} PtlNIDebug_in;

typedef struct PtlNIDebug_out {
        unsigned int rc;
} PtlNIDebug_out;


typedef struct PtlMEAttach_in {
        ptl_handle_ni_t interface_in;
        ptl_pt_index_t index_in;
        ptl_ins_pos_t position_in;
        ptl_process_id_t match_id_in;
        ptl_match_bits_t match_bits_in;
        ptl_match_bits_t ignore_bits_in;
        ptl_unlink_t unlink_in;
} PtlMEAttach_in;

typedef struct PtlMEAttach_out {
        int rc;
        ptl_handle_me_t handle_out;
} PtlMEAttach_out;


typedef struct PtlMEInsert_in {
        ptl_handle_me_t current_in;
        ptl_process_id_t match_id_in;
        ptl_match_bits_t match_bits_in;
        ptl_match_bits_t ignore_bits_in;
        ptl_unlink_t unlink_in;
        ptl_ins_pos_t position_in;
} PtlMEInsert_in;

typedef struct PtlMEInsert_out {
        int rc;
        ptl_handle_me_t handle_out;
} PtlMEInsert_out;

typedef struct PtlMEUnlink_in {
        ptl_handle_me_t current_in;
        ptl_unlink_t unlink_in;
} PtlMEUnlink_in;

typedef struct PtlMEUnlink_out {
        int rc;
} PtlMEUnlink_out;


typedef struct PtlTblDump_in {
        int index_in;
} PtlTblDump_in;

typedef struct PtlTblDump_out {
        int rc;
} PtlTblDump_out;


typedef struct PtlMEDump_in {
        ptl_handle_me_t current_in;
} PtlMEDump_in;

typedef struct PtlMEDump_out {
        int rc;
} PtlMEDump_out;


typedef struct PtlMDAttach_in {
        ptl_handle_me_t me_in;
        ptl_handle_eq_t eq_in;
        ptl_md_t md_in;
        ptl_unlink_t unlink_in;
} PtlMDAttach_in;

typedef struct PtlMDAttach_out {
        int rc;
        ptl_handle_md_t handle_out;
} PtlMDAttach_out;


typedef struct PtlMDBind_in {
        ptl_handle_ni_t ni_in;
        ptl_handle_eq_t eq_in;
        ptl_md_t md_in;
} PtlMDBind_in;

typedef struct PtlMDBind_out {
        int rc;
        ptl_handle_md_t handle_out;
} PtlMDBind_out;


typedef struct PtlMDUpdate_internal_in {
        ptl_handle_md_t md_in;
        ptl_handle_eq_t testq_in;
        ptl_seq_t sequence_in;

        ptl_md_t old_inout;
        int old_inout_valid;
        ptl_md_t new_inout;
        int new_inout_valid;
} PtlMDUpdate_internal_in;

typedef struct PtlMDUpdate_internal_out {
        int rc;
        ptl_md_t old_inout;
        ptl_md_t new_inout;
} PtlMDUpdate_internal_out;


typedef struct PtlMDUnlink_in {
        ptl_handle_md_t md_in;
} PtlMDUnlink_in;

typedef struct PtlMDUnlink_out {
        int rc;
        ptl_md_t status_out;
} PtlMDUnlink_out;


typedef struct PtlEQAlloc_in {
        ptl_handle_ni_t ni_in;
        ptl_size_t count_in;
        void *base_in;
        int len_in;
        int (*callback_in) (ptl_event_t * event);
} PtlEQAlloc_in;

typedef struct PtlEQAlloc_out {
        int rc;
        ptl_handle_eq_t handle_out;
} PtlEQAlloc_out;


typedef struct PtlEQFree_in {
        ptl_handle_eq_t eventq_in;
} PtlEQFree_in;

typedef struct PtlEQFree_out {
        int rc;
} PtlEQFree_out;


typedef struct PtlACEntry_in {
        ptl_handle_ni_t ni_in;
        ptl_ac_index_t index_in;
        ptl_process_id_t match_id_in;
        ptl_pt_index_t portal_in;
} PtlACEntry_in;

typedef struct PtlACEntry_out {
        int rc;
} PtlACEntry_out;


typedef struct PtlPut_in {
        ptl_handle_md_t md_in;
        ptl_ack_req_t ack_req_in;
        ptl_process_id_t target_in;
        ptl_pt_index_t portal_in;
        ptl_ac_index_t cookie_in;
        ptl_match_bits_t match_bits_in;
        ptl_size_t offset_in;
        ptl_hdr_data_t hdr_data_in;
} PtlPut_in;

typedef struct PtlPut_out {
        int rc;
} PtlPut_out;


typedef struct PtlGet_in {
        ptl_handle_md_t md_in;
        ptl_process_id_t target_in;
        ptl_pt_index_t portal_in;
        ptl_ac_index_t cookie_in;
        ptl_match_bits_t match_bits_in;
        ptl_size_t offset_in;
} PtlGet_in;

typedef struct PtlGet_out {
        int rc;
} PtlGet_out;


#endif
