#!/bin/sh

LC_COLLATE="C"
progname="${0##*/}"

warn ()
{
    [ "$1" ] && echo >&2
    [ "$1" ] && echo "$progname: $1" >&2
    [ "$1" ] && echo >&2
}

fatal ()
{
    warn "$2"
    exit "$1"
}

usage ()
{
    cat <<EOF
Usage: $progname <lustretag>
  where <lustretag> is a tag of the lustre-core module
EOF
}

if [ -z "$LUSTRECVS_UPDATED" ] ; then
    echo "$progname: updating lustrecvs"
    cvs up -l || fatal 1 "Error updating lustrecvs"
    export LUSTRECVS_UPDATED=yes
    exec "$0" "$@"
fi

[ "$1" = "-r" ] && shift

buildtag="HEAD"
lustretag="$1"
shift

if [ "$*" ] ; then
    usage >&2
    exit 1
fi


case "$lustretag" in
    '')
        warn "a lustretag is required."
	usage >&2
	exit 1
	;;
    --help | -h)
	usage
	exit 0
	;;

    # These releases did not get build tagged for them because they
    # this build system didn't exist when they were tagged
    v1_2_8|v1_4_0) 
        buildtag="HEAD"
        ;;
    
    b_release_1_4_6-patchless) buildtag=b_release_1_4_6 ;;

    v* | b_release*) buildtag=$lustretag ;;

    # this is the branch table
    # keep this list sorted alphabetically!

    *)
        buildtag="HEAD"
	;;

esac

error_modules=
cvs_cmd ()
{
    dir="$1"
    module="$2"
    tag="$3"
    cotag=""
    update=""

    if [ "$tag" = "HEAD" ] ; then
	cotag=""
	uptag="-A"
    elif [ "$tag" ] ; then
	cotag="-r $tag"
	uptag="-r $tag"
    else
	# silently skip if no tag was specified
	return
    fi

    if [ -d "$dir" ] ; then
	echo "$progname: Updating $dir to $tag"
	( cd "$dir" && cvs up -dP $uptag )
    else
	echo "$progname: Checking out $dir from $tag"
	cvs co -P $cotag -d "$dir" "$module"
    fi
    if [ $? != 0 ] ; then
	error_modules="$dir $error_modules"
    fi
}

cvs_cmd build lustre-build "$buildtag"

if [ -f build/buildcvs ] ; then
    . build/buildcvs
else
    fatal 1 "build/buildcvs does not exist; not updating other modules."
fi

if [ "$error_modules" ] ; then
    fatal 1 "There were errors checking out the following directories: $error_modules"
fi
