#! @BASH@

#  This script is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License version 2 as
#  published by the Free Software Foundation.
#
#  See the COPYING and AUTHORS files for more details.

# Read in library functions
if [ "$(type -t patch_file_name)" != function ]
then
	if ! [ -r @SCRIPTS@/patchfns ]
	then
		echo "Cannot read library @SCRIPTS@/patchfns" >&2
		exit 1
	fi
	. @SCRIPTS@/patchfns
fi

usage()
{
	echo $"Usage: quilt setup [-d sourcedir] {seriesfile|specfile}"
	if [ x$1 = x-h ]
	then
		echo $"

Initializes a source tree from a patch series file.  The patch series
file must contain the name of the relevant tar archive, in addition to
the list of patches.

"
		exit 0
	else
		exit 1
	fi
}

parse_series()
{
	local series="$1"

	perl -e '
		while(<>) {
			if (/^#\s*Sourcedir:\s*(\S+)/) {
				print "SOURCEDIR $1\n";
			} elsif (/^#\s*[Ss]ource:\s*(\S+)\s*(-C\s*(\S+))?/) {
				print "SOURCE $1 ", ($3 ? $3 : "."), "\n";
			} elsif (/^#\s*[Pp]atchdir:\s*(\S+)/) {
				print "PATCHDIR $1\n";
			} elsif (/^([^#\s]+)/) {
				print "PATCH $1\n";
			}
		}
	' $series
	echo "SERIES $series"
}

options=`getopt -o d:h -- "$@"`

if [ $? -ne 0 ]
then
	usage
fi

eval set -- "$options"

while true
do
	case "$1" in
	-d)
		opt_source=$2
		shift 2 ;;
	-h)
		usage -h ;;
	--)
		shift
		break ;;
	esac
done

if [ $# -ne 1 ]
then
	usage
fi

case "$1" in
*.spec)
	spec_file="$1"
	tmpfile=$(gen_tempfile)
	series_file=$tmpfile
	if ! @SCRIPTS@/spec2series "$spec_file" > $tmpfile
	then
		exit 1
	fi
	;;
*)
	series_file=$1
	if ! [ -e "$series_file" ]
	then
		echo $"Series file $series_file not found"
		exit 1
	fi
	;;
esac

if [ -n "$opt_source" ]
then
	source="$opt_source"
elif [ -n "$spec_file" ]
then
	source="$(dirname "$spec_file")"
else
	source="$(dirname "$series_file")"
fi

packagedir=.

echo $"create link patch $packagedir/patches to $source"
ln -s "$source" "${packagedir}/patches" 
rm -rf "${packagedir}/patches/series"
echo $"creat link of $series_file"
ln -s "$series_file" "${packagedir}/patches/series"	

if [ -n "$tmpfile" ]
then
	rm -f $tmpfile
fi

if [ "$packagedir" != "." ]
then
	echo $"Directory $packagedir set up."
fi
### Local Variables:
### mode: shell-script
### End:
# vim:filetype=sh
