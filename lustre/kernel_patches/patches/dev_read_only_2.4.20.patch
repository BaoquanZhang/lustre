


 drivers/block/blkpg.c  |   35 +++++++++++++++++++++++++++++++++++
 drivers/block/loop.c   |    3 +++
 drivers/ide/ide-disk.c |    5 ++++-
 3 files changed, 42 insertions(+), 1 deletion(-)

--- rh-2.4.20/drivers/block/blkpg.c~dev_read_only_2.4.20	2003-04-11 14:05:03.000000000 +0800
+++ rh-2.4.20-root/drivers/block/blkpg.c	2003-04-12 13:11:31.000000000 +0800
@@ -297,3 +297,38 @@ int blk_ioctl(kdev_t dev, unsigned int c
 }
 
 EXPORT_SYMBOL(blk_ioctl);
+
+#define NUM_DEV_NO_WRITE 16
+static int dev_no_write[NUM_DEV_NO_WRITE];
+
+/*
+ * Debug code for turning block devices "read-only" (will discard writes
+ * silently).  This is for filesystem crash/recovery testing.
+ */
+void dev_set_rdonly(kdev_t dev, int no_write)
+{
+	if (dev) {
+		printk(KERN_WARNING "Turning device %s read-only\n",
+		       bdevname(dev));
+		dev_no_write[no_write] = 0xdead0000 + dev;
+	}
+}
+
+int dev_check_rdonly(kdev_t dev) {
+	int i;
+
+	for (i = 0; i < NUM_DEV_NO_WRITE; i++) {
+		if ((dev_no_write[i] & 0xffff0000) == 0xdead0000 &&
+		    dev == (dev_no_write[i] & 0xffff))
+			return 1;
+	}
+	return 0;
+}
+
+void dev_clear_rdonly(int no_write) {
+	dev_no_write[no_write] = 0;
+}
+
+EXPORT_SYMBOL(dev_set_rdonly);
+EXPORT_SYMBOL(dev_check_rdonly);
+EXPORT_SYMBOL(dev_clear_rdonly);
--- rh-2.4.20/drivers/block/loop.c~dev_read_only_2.4.20	2003-04-11 14:05:08.000000000 +0800
+++ rh-2.4.20-root/drivers/block/loop.c	2003-04-12 13:11:31.000000000 +0800
@@ -491,6 +491,9 @@ static int loop_make_request(request_que
 	spin_unlock_irq(&lo->lo_lock);
 
 	if (rw == WRITE) {
+		if (dev_check_rdonly(rbh->b_rdev))
+			goto err;
+
 		if (lo->lo_flags & LO_FLAGS_READ_ONLY)
 			goto err;
 	} else if (rw == READA) {
--- rh-2.4.20/drivers/ide/ide-disk.c~dev_read_only_2.4.20	2003-04-11 14:04:53.000000000 +0800
+++ rh-2.4.20-root/drivers/ide/ide-disk.c	2003-04-12 13:14:48.000000000 +0800
@@ -381,7 +381,10 @@ static ide_startstop_t do_rw_disk (ide_d
 	if (IS_PDC4030_DRIVE)
 		return promise_rw_disk(drive, rq, block);
 #endif /* CONFIG_BLK_DEV_PDC4030 */
-
+ 	if (rq->cmd == WRITE && dev_check_rdonly(rq->rq_dev)) {
+ 		ide_end_request(1, HWGROUP(drive));
+ 		return ide_stopped;
+ 	}
 	if (IDE_CONTROL_REG)
 		hwif->OUTB(drive->ctl, IDE_CONTROL_REG);
 

_
