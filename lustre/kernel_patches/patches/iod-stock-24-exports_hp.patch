--- linux-2.4.19-hp2_pnnl4_Lv13/fs/inode.c.iod-export	2003-02-27 14:28:04.000000000 -0800
+++ linux-2.4.19-hp2_pnnl4_Lv13/fs/inode.c	2003-03-03 13:54:59.000000000 -0800
@@ -5,6 +5,7 @@
  */
 
 #include <linux/config.h>
+#include <linux/module.h>
 #include <linux/fs.h>
 #include <linux/string.h>
 #include <linux/mm.h>
@@ -66,7 +67,8 @@
  * NOTE! You also have to own the lock if you change
  * the i_state of an inode while it is in use..
  */
-static spinlock_t inode_lock = SPIN_LOCK_UNLOCKED;
+spinlock_t inode_lock = SPIN_LOCK_UNLOCKED;
+EXPORT_SYMBOL(inode_lock);
 
 /*
  * Statistics gathering..
--- linux-2.4.19-hp2_pnnl4_Lv13/fs/Makefile.iod-export	2003-02-27 14:28:01.000000000 -0800
+++ linux-2.4.19-hp2_pnnl4_Lv13/fs/Makefile	2003-03-03 13:56:11.000000000 -0800
@@ -7,7 +7,7 @@
 
 O_TARGET := fs.o
 
-export-objs :=	filesystems.o open.o dcache.o buffer.o dquot.o
+export-objs :=	filesystems.o open.o dcache.o buffer.o dquot.o inode.o
 mod-subdirs :=	nls xfs
 
 obj-y :=	open.o read_write.o devices.o file_table.o buffer.o \
--- linux-2.4.19-hp2_pnnl4_Lv13/mm/page_alloc.c.iod-export	2003-02-27 14:28:01.000000000 -0800
+++ linux-2.4.19-hp2_pnnl4_Lv13/mm/page_alloc.c	2003-03-03 13:54:59.000000000 -0800
@@ -28,6 +28,7 @@
 LIST_HEAD(inactive_list);
 LIST_HEAD(active_list);
 pg_data_t *pgdat_list;
+EXPORT_SYMBOL(pgdat_list);
 
 /* Used to look up the address of the struct zone encoded in page->zone */
 zone_t *zone_table[MAX_NR_ZONES*MAX_NR_NODES];
