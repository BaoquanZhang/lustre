 drivers/block/blkpg.c  |   35 +++++++++++++++++++++++++++++++++++
 drivers/block/loop.c   |    3 +++
 drivers/ide/ide-disk.c |    5 +++++
 3 files changed, 43 insertions(+)

Index: linux-2.4.20-rh-20.9/drivers/block/blkpg.c
===================================================================
--- linux-2.4.20-rh-20.9.orig/drivers/block/blkpg.c	2003-11-13 17:19:32.000000000 +0300
+++ linux-2.4.20-rh-20.9/drivers/block/blkpg.c	2003-11-13 17:20:28.000000000 +0300
@@ -297,3 +297,38 @@
 }
 
 EXPORT_SYMBOL(blk_ioctl);
+
+#define NUM_DEV_NO_WRITE 16
+static int dev_no_write[NUM_DEV_NO_WRITE];
+
+/*
+ * Debug code for turning block devices "read-only" (will discard writes
+ * silently).  This is for filesystem crash/recovery testing.
+ */
+void dev_set_rdonly(kdev_t dev, int no_write)
+{
+	if (dev) {
+		printk(KERN_WARNING "Turning device %s read-only\n",
+		       bdevname(dev));
+		dev_no_write[no_write] = 0xdead0000 + dev;
+	}
+}
+
+int dev_check_rdonly(kdev_t dev) {
+	int i;
+
+	for (i = 0; i < NUM_DEV_NO_WRITE; i++) {
+		if ((dev_no_write[i] & 0xffff0000) == 0xdead0000 &&
+		    dev == (dev_no_write[i] & 0xffff))
+			return 1;
+	}
+	return 0;
+}
+
+void dev_clear_rdonly(int no_write) {
+	dev_no_write[no_write] = 0;
+}
+
+EXPORT_SYMBOL(dev_set_rdonly);
+EXPORT_SYMBOL(dev_check_rdonly);
+EXPORT_SYMBOL(dev_clear_rdonly);
Index: linux-2.4.20-rh-20.9/drivers/block/loop.c
===================================================================
--- linux-2.4.20-rh-20.9.orig/drivers/block/loop.c	2003-11-13 17:19:32.000000000 +0300
+++ linux-2.4.20-rh-20.9/drivers/block/loop.c	2003-11-13 17:20:28.000000000 +0300
@@ -491,6 +491,9 @@
 	spin_unlock_irq(&lo->lo_lock);
 
 	if (rw == WRITE) {
+		if (dev_check_rdonly(rbh->b_rdev))
+			goto err;
+
 		if (lo->lo_flags & LO_FLAGS_READ_ONLY)
 			goto err;
 	} else if (rw == READA) {
Index: linux-2.4.20-rh-20.9/drivers/ide/ide-disk.c
===================================================================
--- linux-2.4.20-rh-20.9.orig/drivers/ide/ide-disk.c	2003-11-13 17:19:32.000000000 +0300
+++ linux-2.4.20-rh-20.9/drivers/ide/ide-disk.c	2003-11-13 18:13:46.000000000 +0300
@@ -371,6 +371,11 @@
 	if (driver_blocked)
 		panic("Request while ide driver is blocked?");
 
+  	if (rq->cmd == WRITE && dev_check_rdonly(rq->rq_dev)) {
+  		ide_end_request(drive, 1);
+  		return ide_stopped;
+  	}
+
 	if (IDE_CONTROL_REG)
 		hwif->OUTB(drive->ctl, IDE_CONTROL_REG);
 
