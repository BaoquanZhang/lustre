Index: linux-2.4.20-rh/drivers/block/blkpg.c
===================================================================
--- linux-2.4.20-rh.orig/drivers/block/blkpg.c	2003-07-22 16:02:29.000000000 +0800
+++ linux-2.4.20-rh/drivers/block/blkpg.c	2003-12-09 17:33:09.000000000 +0800
@@ -297,3 +297,38 @@
 }
 
 EXPORT_SYMBOL(blk_ioctl);
+
+#define NUM_DEV_NO_WRITE 16
+static int dev_no_write[NUM_DEV_NO_WRITE];
+
+/*
+ * Debug code for turning block devices "read-only" (will discard writes
+ * silently).  This is for filesystem crash/recovery testing.
+ */
+void dev_set_rdonly(kdev_t dev, int no_write)
+{
+	if (dev) {
+		printk(KERN_WARNING "Turning device %s read-only\n",
+		       bdevname(dev));
+		dev_no_write[no_write] = 0xdead0000 + dev;
+	}
+}
+
+int dev_check_rdonly(kdev_t dev) {
+	int i;
+
+	for (i = 0; i < NUM_DEV_NO_WRITE; i++) {
+		if ((dev_no_write[i] & 0xffff0000) == 0xdead0000 &&
+		    dev == (dev_no_write[i] & 0xffff))
+			return 1;
+	}
+	return 0;
+}
+
+void dev_clear_rdonly(int no_write) {
+	dev_no_write[no_write] = 0;
+}
+
+EXPORT_SYMBOL(dev_set_rdonly);
+EXPORT_SYMBOL(dev_check_rdonly);
+EXPORT_SYMBOL(dev_clear_rdonly);
Index: linux-2.4.20-rh/drivers/block/ll_rw_blk.c
===================================================================
--- linux-2.4.20-rh.orig/drivers/block/ll_rw_blk.c	2003-07-22 16:02:34.000000000 +0800
+++ linux-2.4.20-rh/drivers/block/ll_rw_blk.c	2003-12-09 17:39:38.000000000 +0800
@@ -1183,6 +1183,10 @@
 			buffer_IO_error(bh);
 			break;
 		}
+                if ((rw & WRITE)&&(dev_check_rdonly(bh->b_rdev))) {
+                        bh->b_end_io(bh, 0);
+                        break;
+                }
 	} while (q->make_request_fn(q, rw, bh));
 }
 
