diff -u -r kernel-2.4.20/drivers/block/blkpg.c kernel-2.4.20-l15/drivers/block/blkpg.c
--- kernel-2.4.20/drivers/block/blkpg.c	Fri Aug  2 17:39:43 2002
+++ kernel-2.4.20-l15drivers/block/blkpg.c	Tue Apr  8 19:40:22 2003
@@ -296,3 +296,38 @@
 }
 
 EXPORT_SYMBOL(blk_ioctl);
+
+#define NUM_DEV_NO_WRITE 16
+static int dev_no_write[NUM_DEV_NO_WRITE];
+
+/*
+ * Debug code for turning block devices "read-only" (will discard writes
+ * silently).  This is for filesystem crash/recovery testing.
+ */
+void dev_set_rdonly(kdev_t dev, int no_write)
+{
+	if (dev) {
+		printk(KERN_WARNING "Turning device %s read-only\n",
+		       bdevname(dev));
+		dev_no_write[no_write] = 0xdead0000 + dev;
+	}
+}
+
+int dev_check_rdonly(kdev_t dev) {
+	int i;
+
+	for (i = 0; i < NUM_DEV_NO_WRITE; i++) {
+		if ((dev_no_write[i] & 0xffff0000) == 0xdead0000 &&
+		    dev == (dev_no_write[i] & 0xffff))
+			return 1;
+	}
+	return 0;
+}
+
+void dev_clear_rdonly(int no_write) {
+	dev_no_write[no_write] = 0;
+}
+
+EXPORT_SYMBOL(dev_set_rdonly);
+EXPORT_SYMBOL(dev_check_rdonly);
+EXPORT_SYMBOL(dev_clear_rdonly);
diff -u -r kernel-2.4.20/drivers/block/loop.c kernel-2.4.20-l15/drivers/block/loop.c
--- kernel-2.4.20/drivers/block/loop.c	Thu Nov 28 15:53:12 2002
+++ kernel-2.4.20-l15/drivers/block/loop.c	Tue Apr  8 19:40:22 2003
@@ -474,6 +474,9 @@
 	spin_unlock_irq(&lo->lo_lock);
 
 	if (rw == WRITE) {
+		if (dev_check_rdonly(rbh->b_rdev))
+			goto err;
+
 		if (lo->lo_flags & LO_FLAGS_READ_ONLY)
 			goto err;
 	} else if (rw == READA) {
diff -u -r kernel-2.4.20/drivers/ide/ide-disk.c kernel-2.4.20-l15/drivers/ide/ide-disk.c
--- kernel-2.4.20/drivers/ide/ide-disk.c	Thu Nov 28 15:53:13 2002
+++ kernel-2.4.20-l15/drivers/ide/ide-disk.c	Tue Apr  8 19:42:09 2003
@@ -558,6 +558,10 @@
  */
 static ide_startstop_t do_rw_disk (ide_drive_t *drive, struct request *rq, unsigned long block)
 {
+	if (rq->cmd == WRITE && dev_check_rdonly(rq->rq_dev)) {
+ 		ide_end_request(1, HWGROUP(drive));
+		return ide_stopped;
+	} 
 	if (IDE_CONTROL_REG)
 		OUT_BYTE(drive->ctl,IDE_CONTROL_REG);
 
