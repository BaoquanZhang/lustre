#!/bin/sh
#
# Script which does some basic tests to ensure we haven't regressed.
# Probably a good idea to run this before doing any checkins.
# In the future this can become more fancy, but it's OK for now.

LUSTRE=${LUSTRE:-`dirname $0`/..}
SRCDIR="`dirname $0`"
export PATH=/sbin:/usr/sbin:$SRCDIR:$SRCDIR/../utils:$PATH

export NAME=${NAME:-local}

. $LUSTRE/tests/test-framework.sh
init_test_env $@
. ${CONFIG:=$LUSTRE/tests/cfg/$NAME.sh}

SETUP=${SETUP:-setupall}
FORMAT=${FORMAT:-formatall}
CLEANUP=${CLEANUP:-stopall}

fail() { 
	echo "ERROR: $1" 1>&2
	[ $2 ] && RC=$2 || RC=1
	exit $RC
}

ERROR=
SRC="/etc /bin"
[ "$COUNT" ] || COUNT=1000

[ "$MCREATE" ] || MCREATE=mcreate

[ "$MKDIRMANY" ] || MKDIRMANY="createmany -d"

while [ "$1" ]; do
	case $1 in
	*.xml) export NAME=`echo $1 | sed "s/.xml//"` ;;
	*) OPTS="$OPTS $1" ;;
	esac
	shift
done

MOUNTED=$(mounted_lustre_filesystems | head -1)
if [ -z "$MOUNTED" ]; then
	formatall
	setupall
	MOUNTED="`mounted_lustre_filesystems`"
	[ -z "$MOUNTED" ] && error "NAME=$NAME not mounted"
	I_MOUNTED=yes
fi

MOUNT=$MOUNTED

OSCTMP=`echo $MOUNT | tr "/" "."`
USED=`df | awk "/$OSCTMP/ { print \\$3 }" | tail -n 1`
USED=`expr $USED + 16`	# Some space for the status file

# let's start slowly here...
START=`date +%s`
log "touching $MOUNT at `date`"
touch $MOUNT || fail "can't touch $MOUNT" 2
HOSTS=$MOUNT/hosts.$$
TRUNCSIZE=123

if [ $COUNT -gt 10 -o $COUNT -eq 0 ]; then
	# this will cause the following cp to trigger bug #620096
	log "create an empty file $HOSTS"
	mcreate $HOSTS
	log "copying /etc/hosts to $HOSTS"
	cp /etc/hosts $HOSTS || fail "can't cp /etc/hosts to $HOSTS" 3
	log "comparing /etc/hosts and $HOSTS"
	diff -u /etc/hosts $HOSTS || fail "$HOSTS different" 4
	log "renaming $HOSTS to $HOSTS.ren"
	mv $HOSTS $HOSTS.ren || fail "can't rename $HOSTS to $HOSTS.ren" 5
	log "copying /etc/hosts to $HOSTS again"
	cp /etc/hosts $HOSTS || fail "can't cp /etc/hosts to $HOSTS again" 6
	log "truncating $HOSTS"
	> $HOSTS || fail "can't truncate $HOSTS" 8
	log "removing $HOSTS"
	rm $HOSTS || fail "can't remove $HOSTS" 9
	cp /etc/hosts $HOSTS.2 || fail "can't cp /etc/hosts to $HOSTS.2" 7
	log "truncating $HOSTS.2 to $TRUNCSIZE bytes"
	truncate $HOSTS.2 $TRUNCSIZE
fi

DST=$MOUNT/runtest.$$
# let's start slowly here...
log "creating $DST"
mkdir $DST || fail "can't mkdir $DST" 10

# ok, that hopefully worked, so let's do a little more, with files that
# haven't changed in the last day (hopefully they don't change during test)
FILES=`find $SRC -type f -mtime +1 | head -n $COUNT`
[ -z "$FILES" ] && fail "No unchanged files - is $SRC a new dir?"

log "copying files from $SRC to $DST$SRC at `date`"
tar cf - $FILES | tar xvf - -C $DST > /dev/null || fail "copying $SRC" 11

log "comparing newly copied files at `date`"
for f in $FILES; do
	[ $V ] && log "verifying $DST/$f"
	diff -q $f $DST/$f || ERROR=11
done

[ "$ERROR" ] && fail "old and new files are different" $ERROR
log "finished at `date` ($(($(date +%s) - START)))"

$CLEANUP || exit 19
$SETUP || exit 20

log "comparing previously copied files"
for f in $FILES; do
	[ $V ] && log "verifying $DST/$f"
	diff -q $f $DST/$f || ERROR=22
done

[ "$ERROR" ] && fail "old and new files are different on second diff" $ERROR

$CLEANUP || exit 19
$SETUP || exit 20

log "removing $DST"
rm -r $V $DST || fail "can't remove $DST" 37

if [ $COUNT -gt 10 -o $COUNT -eq 0 ]; then
	log "renaming $HOSTS.ren to $HOSTS"
	mv $HOSTS.ren $HOSTS || fail "can't rename $HOSTS.ren to $HOSTS" 32
	log "truncating $HOSTS"
	> $HOSTS || fail "can't truncate $HOSTS" 34
	log "removing $HOSTS"
	rm $HOSTS || fail "can't remove $HOSTS again" 36
	log "verifying $HOSTS.2 is $TRUNCSIZE bytes"
	checkstat -s $TRUNCSIZE $HOSTS.2 || \
		fail "$HOSTS.2 isn't $TRUNCSIZE bytes" 37
	rm $HOSTS.2 || fail "can't remove $HOSTS.2" 38
fi

# mkdirmany test (bug 589)
log "running $MKDIRMANY $MOUNT/base$$ 100"
$MKDIRMANY $MOUNT/base$$ 100 || fail "mkdirmany failed"
log "removing mkdirmany directories"
rmdir $MOUNT/base$$* || fail "mkdirmany cleanup failed"

log "done"

NOWUSED=`df | awk "/$OSCTMP/ { print \\$3 }" | tail -n 1`
if [ `expr $NOWUSED - $USED` -gt 1024 ]; then
	echo "Space not all freed: now ${NOWUSED}kB, was ${USED}kB." 1>&2
fi

if [ "$I_MOUNTED" = "yes" ]; then
	$CLEANUP
fi
